# Mia UserBot - –ß ‚Å™‚Å¨‚ÅÆ‚ÅÆ

""" UserBot ba≈ülangƒ±√ß noktasƒ± """
import importlib
from importlib import import_module
from sqlite3 import connect
import os
import requests
import sys
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from telethon.tl.functions.channels import GetMessagesRequest
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP, LANGUAGE, LEGEND_VERSION, PATTERNS, ForceVer
from .modules import ALL_MODULES
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
import userbot.modules.sql_helper.galeri_sql as GALERI_SQL
from pySmartDL import SmartDL
from telethon.tl import functions

from random import choice
import chromedriver_autoinstaller
from json import loads, JSONDecodeError
import re
import userbot.cmdhelp

ALIVE_MSG = [
    "`Userbotunuz i≈ül…ôyir. S…ôn…ô bir≈üey dem…ôk istiyir…ôm.. S…ôni sevir…ô√ß` **{legendsahip}** ‚ù§Ô∏è",
    "üéÜ `Narahat olma! S…ôni yalnƒ±z buraxmaram.` **{legendsahip}**, `LegendUserbot i≈ül…ôyir.`",
    "`‚õàÔ∏è ∆èlimd…ôn g…ôl…ônin …ôn yax≈üƒ±sƒ±nƒ± etm…ôy…ô hazƒ±ram`, **{legendsahip}**",
    "‚ú® `LegendUserBot sahibinin …ômirl…ôrin…ô hazƒ±r...`",
    "`ƒ∞ndi …ôn m√ºasir userbotun editl…ôdiyi mesajƒ± oxumalƒ±san` **{legendsahip}**.",
    "`M…ôn…ô z…ông el…ômi≈üdin‚ùì M…ôn Buradayam Maraqlanma`"
    "`Userbotunuz i≈ül…ôy…ôli bu q…ôd…ôr olur:` **{worktime}** ‚ù§Ô∏è",
    "üéÜ `Narahat olma! S…ôninl…ôy…ôm.` **{legendsahip}**, `userbot i≈ül…ôyir.`",
    "`‚õàÔ∏è Yeni kimi g√∂r√ºn√ºr!`, **{legendsahip}:3**",
    "‚ú® `Userbot sahibinin …ômirl…ôrin…ô hazƒ±r...`",
    "`Huh!` **{legendsahip}** `m…ôni √ßaƒüƒ±rƒ±r üç∞ < bu s…ônin √º√ß√ºnd√ºr ü•∫..`",
    "{mention} **Legend S…ônin √ú√ß√ºn ƒ∞≈ül…ôyir‚ú®**",
    "{username}, `LegendUserBot {worktime} zamandƒ±r i≈ül…ôyir...`\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n**Telethon versiyasƒ± :** `{telethon}`\n**Userbot versiyasƒ±  :** `{legend}`\n**Python versiyasƒ±    :** `{python}`\n**Plugin sayƒ±sƒ± :** `{plugin}`\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n**∆èmrind…ôy…ôm dostum... üòá*
DIZCILIK_STR = [
    "Stikeri dƒ±zlƒ±yƒ±ram...",
    "Oƒüurladƒ±m Getdi Ke√ßmi≈ü Olsun ü§≠",
    "Ya≈üasƒ±n dƒ±zcƒ±lƒ±q...",
    "Bu stikeri √∂z paketim…ô d…ôv…ôt edir…ôm...",
    "Bunu dƒ±zlamam lazƒ±mdƒ±da ...",
    "Hooy bu g√∂z…ôl bir stiker!\nH…ôm…ôn dƒ±zlƒ±yƒ±ram..",
    "Stikeri dƒ±zlƒ±yƒ±ram\nhahaha.",
    "Hooy bura bax. (‚òâÔΩ°‚òâ)!‚Üí\nM…ôn bunu dƒ±zlayanda...",
    "G√ºll…ôr qƒ±rmƒ±zƒ± b…ôn√∂v≈ü…ôl…ôr mavi, bu stiker paketime dƒ±zlayaraq havalƒ± olacam...",
    "Stiker h…ôbs edilir...",
    "Canƒ±m, dƒ±zcƒ± bu stikeri dƒ±zlƒ±yƒ±r... ",
    "Bu g√∂z…ôl stiker niy…ô m…ônim paketimde d…ô olmasƒ±nü§≠",
]

AFKSTR = [
    "ƒ∞ndi t…ôl…ôsir…ôm, daha sonra mesaj atsan olmaz dƒ±? Onsuz yen…ô g…ôl…ôc…ômd…ô.",
    "√áaƒüƒ±rdƒ±ƒüƒ±nƒ±z ki≈üi ƒ∞ndi telefona cavab ver…ô bilmir. Siqnal s…ôsind…ôn sonra √∂z t…ôrifiniz √ºz…ôrind…ôn mesajƒ±nƒ±zƒ± buraxa bil…ôrsiniz. Mesaj haqqƒ± 49 q…ôpiydir. \n`biiiiiiiiiiiiiiiiiiiiiiiiiiiiib`!",
    "Bir ne√ß…ô d…ôqiq…ôy…ô g…ôl…ôc…ôm. Amma, g…ôlm…ôzs…ôm...\ndaha √ßox g√∂zl…ô.",
    "ƒ∞ndi burada deyil…ôm, amma ehtimal edir…ômki ba≈üqa bir yerd…ôy…ôm.",
    "G√ºll…ôr qƒ±rmƒ±zƒ±\nB…ôn√∂v≈ü…ôl…ôr mavi\nM…ôn…ô bir mesaj burax\nV…ô s…ôn…ô g…ôl…ôc…ôm.",
    "B…ôz…ôn h…ôyatdakƒ± …ôn yax≈üƒ± ≈üeyl…ôri g√∂zl…ôm…ôy…ô d…ôy…ôr‚Ä¶\nƒ∞ndi g…ôl…ôr…ôm.",
    "ƒ∞ndi g…ôl…ôr…ôm,\namma geri g…ôlm…ôzs…ôm,\ndaha sonra g…ôl…ôr…ôm.",
    "H…ôl…ôd…ô anlamamƒ±san?,\nburada deyil…ôm.",
    "Salam, uzaq mesajƒ±ma xo≈ü g…ôldiniz, bug√ºn sizi nec…ô g√∂rm…ôzd…ôn g…ôl…ô bil…ôr…ôm?",
    "7 d…ôniz v…ô 7 √∂lk…ôd…ôn uzaqdayam,\n7 su ve 7 qit…ô,\n7 daƒü v…ô 7 t…ôp…ô,\n7 ovala v…ô 7 kurqan,\n7 hovuz v…ô 7 g√∂l,\n7 bahar v…ô 7 √ß…ôm…ôn,\n7 ≈ü…ôh…ôr v…ô 7 m…ôh…ôll…ô,\n7 blok v…ô 7 ev...\n\nMesajlarƒ±n bel…ô m…ôn…ô √ßata bilm…ôy…ôc…ôyi bir yer!",
    "ƒ∞ndi klaviyaturadan uzaqdayam, amma ekranƒ±nƒ±zda yet…ôrinc…ô y√ºks…ôk s…ôsl…ô qƒ±≈üqƒ±rsanƒ±z, sizi e≈üid…ô bil…ôr…ôm.",
    "Bu y√∂nd…ô gedir…ôm\n---->",
    "Bu y√∂nd…ô gedir…ôm\n<----",
    "Xahi≈ü mesaj buraxƒ±n v…ô m…ôni olduƒüumdan daha √∂z…ôl hiss etdirin.",
    "Sahibim burada deƒüil, bu y√ºzden bana yazmayƒ± bƒ±rak.",
    "Burada olsaydƒ±m,\nS…ôn…ô harada olduƒüumu dey…ôrdim.\n\nAmma m…ôn deyil…ôm,\ngeri g…ôldiyimd…ô m…ôn…ô de...",
    "Uzaqlardayam!\nN…ô vaxt g…ôl…ôr…ôm bilmir…ôm !\n√úmid edir…ômki bir ne√ß…ô d…ôqiq…ô sonra!",
    "Sahibim indid…ô m…ô≈üƒüuldur. Adƒ±nƒ±zƒ±, n√∂mr…ônizi v…ô adresinizi vers…ôniz ona g√∂nd…ôr…ô bil…ôr…ôm v…ô bel…ôlikl…ô geri d√∂nd√ºy√º zaman.",
    "√áox pis…ôm, sahibim burada deyil.\nO g…ôl…ôn…ô q…ôd…ôr m…ôniml…ô danƒ±≈üa bil…ôrsiniz.\nSahibim siz…ô sonra g…ôl…ôr.",
    "B…ôhs…ô gir…ôr…ôm bir mesaj g√∂zl…ôyirdin!",
    "H…ôyat √ßok qƒ±sa, ed…ôc…ôk √ßox ≈üey var...\nOnlardan birini edir…ôm...",
    "ƒ∞ndi burada deyil…ôm....\nama el…ôs…ôm ...\n\nbu babat olmazdƒ±?",
    "M…ôni xatƒ±rladƒ±ƒüƒ±na sevindim amma indi klaviyatura m…ôn…ô √ßox uzaqdƒ±r",
    "B…ôlk…ô Yax≈üƒ±yam, B…ôlk…ô pis…ôm, Bilmirs…ôn Amma AFK Olduƒüumu G√∂r…ô bilirs…ôn"
]

KICKME_MSG = [
    "Saƒüol da m…ôn gedir…ômüëãüèª",
    "S…ôssizc…ô tullanƒ±ram ü•¥",
    "X…ôb…ôrin olmadan √ßƒ±xarsam bir g√ºn m…ônim qrupta olmadƒ±ƒüƒ±nƒ± bil…ôc…ôks…ôn.. Onun √º√ß√ºn bu mesajƒ± buraxƒ±ramüö™",
    "M…ôn buranƒ± t…ôrk etm…ôliy…ômü§≠"
    "7 d…ôniz v…ô 7 √∂lk…ô,\n7 su v…ô 7 qit…ô,\n7 daƒü v…ô 7 t…ôp…ô,\n7 ovala v…ô 7 kurqan,\n7 hovuz v…ô 7 g√∂l,\n7 bahar v…ô 7 √ß…ôm…ôn,\n7 ≈ü…ôh…ôr ve 7 m…ôh…ôll…ô,\n7 blok v…ô 7 ev...\n\nQƒ±saca bu qruptan uzaq bir yer…ô..!",
    "Saƒüolun m…ôn qa√ßdƒ±m!"
]


UNAPPROVED_MSG = ("`{mention} Sahibim t…ôsdiq ed…ôn…ô q…ôd…ôr bu mesajƒ± alacaqsƒ±nüë©üèª‚Äçüíª!\n\n`"
                  "`‚úîÔ∏è T…ôsdiqli olmadƒ±ƒüƒ±n vaxtda h…ôr yazdƒ±ƒüƒ±n mesaja yanƒ±t olaraq sahibimin yerin…ô m…ôn mesaj  `"
                  "`atacaƒüam.....\n\n`")

DB = connect("learning-data-root.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()


INVALID_PH = '\nHATA: Girilen telefon n√∂mr…ôsi ke√ß…ôrsiz' \
             '\n  Ipucu: √ñlk…ô kodunu i≈ül…ôd…ôr…ôk n√∂mr…ôni gir' \
             '\n   Telefon n√∂mr…ônizi t…ôkrar yoxlayƒ±n'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("learning-data-root.check").close()
BRAIN_CHECKER = BRAIN_CHECKER[0]

def extractCommands(file):
    FileRead = open(file, 'r').read()
    
    if '/' in file:
        file = file.split('/')[-1]

    Pattern = re.findall(r"@register\(.*pattern=(r|)\"(.*)\".*\)", FileRead)
    Komutlar = []

    if re.search(r'CmdHelp\(.*\)', FileRead):
        pass
    else:
        dosyaAdi = file.replace('.py', '')
        CmdHelp = userbot.cmdhelp.CmdHelp(dosyaAdi, False)

        # Komutlarƒ± Alƒ±yoruz #
        for Command in Pattern:
            Command = Command[1]
            if Command == '' or len(Command) <= 1:
                continue
            Komut = re.findall("(^.*[a-zA-Z0-9≈üƒü√º√∂√ßƒ±]\w)", Command)
            if (len(Komut) >= 1) and (not Komut[0] == ''):
                Komut = Komut[0]
                if Komut[0] == '^':
                    KomutStr = Komut[1:]
                    if KomutStr[0] == '.':
                        KomutStr = KomutStr[1:]
                    Komutlar.append(KomutStr)
                else:
                    if Command[0] == '^':
                        KomutStr = Command[1:]
                        if KomutStr[0] == '.':
                            KomutStr = KomutStr[1:]
                        else:
                            KomutStr = Command
                        Komutlar.append(KomutStr)

            # MIAPY
            Legendpy = re.search('\"\"\"LEGENDPY(.*)\"\"\"', FileRead, re.DOTALL)
            if not Legendpy == None:
                Legendpy = Legendpy.group(0)
                for Satir in Legendpy.splitlines():
                    if (not '"""' in Satir) and (':' in Satir):
                        Satir = Satir.split(':')
                        Isim = Satir[0]
                        Deger = Satir[1][1:]
                                
                        if Isim == 'INFO':
                            CmdHelp.add_info(Deger)
                        elif Isim == 'WARN':
                            CmdHelp.add_warning(Deger)
                        else:
                            CmdHelp.set_file_info(Isim, Deger)
            for Komut in Komutlar:
                # if re.search('\[(\w*)\]', Komut):
                    # Komut = re.sub('(?<=\[.)[A-Za-z0-9_]*\]', '', Komut).replace('[', '')
                CmdHelp.add_command(Komut, None, 'Bu plugin xaricd…ôn y√ºkl…ônmi≈üdir. H…ôr hansƒ± bir a√ßƒ±qlama tanƒ±mlanmamƒ±≈üdƒ±r.')
            CmdHelp.add()

forceVer = []
DB = connect("force-surum.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM SURUM1""")
ALL_ROWS = CURSOR.fetchall()

for i in ALL_ROWS:
    forceVer = i
connect("force-surum.check").close()
try:
    ForceVer = int(forceVer)
except:
    ForceVer = -1


try:
    bot.start()
    idim = bot.get_me().id
    miabl = requests.get('https://raw.githubusercontent.com/Miauserbot/datas/master/blacklist.json').json()
    if idim in miabl:
        bot.send_message("me", f"`‚ùå Legend adminl…ôri sizi botdan qadaƒüa etdi! Bot baƒülanƒ±r...`")
        LOGS.error("Legend qurucularƒ± sizi botdan qadaƒüan etdi! Bot baƒülanƒ±r...")
        bot.disconnect()
        sys.exit(1)
    # ChromeDriver'ƒ± Ayarlayalƒ±m #
    try:
        chromedriver_autoinstaller.install()
    except:
        pass
    
    # Galeri i√ßin deƒüerler
    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": f"{str(choice(ALIVE_MSG))}", "afk": f"`{str(choice(AFKSTR))}`", "kickme": f"`{str(choice(KICKME_MSG))}`", "pm": str(UNAPPROVED_MSG), "dƒ±zcƒ±": str(choice(DIZCILIK_STR)), "ban": "üåÄ {mention}`, Banlandƒ±!!`", "mute": "üåÄ {mention}`, sessize alƒ±ndƒ±!`", "approve": "`Merhaba` {mention}`, artƒ±k bana mesaj g√∂nderebilirsin!`", "disapprove": "{mention}`, artƒ±k bana mesaj g√∂nderemezsin!`", "block": "{mention}`, bunu bana mecbur bƒ±raktƒ±n! Seni engelledim!`"}


    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "kickme", "pm", "dƒ±zcƒ±", "ban", "mute", "approve", "disapprove", "block"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            if dmsj.startswith("MEDYA_"):
                medya = int(dmsj.split("MEDYA_")[1])
                medya = bot.get_messages(PLUGIN_CHANNEL_ID, ids=medya)

                PLUGIN_MESAJLAR[mesaj] = medya
            else:
                PLUGIN_MESAJLAR[mesaj] = dmsj
    if not PLUGIN_CHANNEL_ID == None:
        LOGS.info("üîÑ Pluginl…ôr Y√ºkl…ônir..")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
        except:
            KanalId = "me"

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if plugin.file.name and (len(plugin.file.name.split('.')) > 1) \
                and plugin.file.name.split('.')[-1] == 'py':
                Split = plugin.file.name.split('.')

                if not os.path.exists("./userbot/modules/" + plugin.file.name):
                    dosya = bot.download_media(plugin, "./userbot/modules/")
                else:
                    LOGS.info("Bu Plugin Onsuzda Y√ºkl√ºd√ºr " + plugin.file.name)
                    extractCommands('./userbot/modules/' + plugin.file.name)
                    dosya = plugin.file.name
                    continue 
                
                try:
                    spec = importlib.util.spec_from_file_location("userbot.modules." + Split[0], dosya)
                    mod = importlib.util.module_from_spec(spec)

                    spec.loader.exec_module(mod)
                except Exception as e:
                    LOGS.info(f"`[√ó] Y√ºkl…ôm…ô Uƒüursuz! Plugin x…ôtalƒ±!!\n\nHata: {e}`")

                    try:
                        plugin.delete()
                    except:
                        pass

                    if os.path.exists("./userbot/modules/" + plugin.file.name):
                        os.remove("./userbot/modules/" + plugin.file.name)
                    continue
                extractCommands('./userbot/modules/' + plugin.file.name)
    else:
        bot.send_message("me", f"`Xahi≈ü pluginl…ôrin qalƒ±cƒ± olmasƒ± √º√ß√ºn PLUGIN_CHANNEL_ID'i ayarlayƒ±n.`")
except PhoneNumberInvalidError:
    print(INVALID_PH)
    sys.exit(1)

async def FotoDegistir (foto):
    FOTOURL = GALERI_SQL.TUM_GALERI[foto].foto
    r = requests.get(FOTOURL)

    with open(str(foto) + ".jpg", 'wb') as f:
        f.write(r.content)    
    file = await bot.upload_file(str(foto) + ".jpg")
    try:
        await bot(functions.photos.UploadProfilePhotoRequest(
            file
        ))
        return True
    except:
        return False

for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)

os.system("clear")

LOGS.info("+===========================================================+")
LOGS.info("|                     ‚ú®Legend Userbot‚ú®                       |")
LOGS.info("+==============+==============+==============+==============+")
LOGS.info("|                                                            |")
LOGS.info("Botunuz i≈ül…ôyir! H…ôr hansƒ± bir s√∂hb…ôt…ô .alive yazaraq Test edin."
          " Yardƒ±ma Ehtiyacƒ±nƒ±z varsa, K√∂m…ôk qrupumuza g…ôlin t.me/suplegend")
LOGS.info(f"Bot versiyanƒ±z: Legend {LEGEND_VERSION}")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
